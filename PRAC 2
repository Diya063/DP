def rail_fence_encrypt(text, rails):
    # Create a 2D array (rails x length of the text) initialized with None
    fence = [['' for _ in range(len(text))] for _ in range(rails)]
    
    # Variables to track the current row and direction of movement (down or up)
    row, direction = 0, 1
    
    # Fill the rail fence
    for i in range(len(text)):
        fence[row][i] = text[i]
        
        # Change direction if we are at the top or bottom rail
        if row == 0:
            direction = 1
        elif row == rails - 1:
            direction = -1
        
        # Move to the next row
        row += direction
    
    # Read the fence row by row to get the encrypted text
    encrypted_text = ''.join([''.join(row) for row in fence])
    return encrypted_text

def rail_fence_decrypt(text, rails):
    # Create a 2D array (rails x length of the text) initialized with None
    fence = [['' for _ in range(len(text))] for _ in range(rails)]
    
    # Variables to track the current row and direction of movement (down or up)
    row, direction = 0, 1
    pattern = [None] * len(text)
    
    # Generate the pattern to know where the characters will go
    for i in range(len(text)):
        pattern[i] = row
        if row == 0:
            direction = 1
        elif row == rails - 1:
            direction = -1
        row += direction
    
    # Fill the fence with the characters in the correct order
    idx = 0
    for r in range(rails):
        for i in range(len(text)):
            if pattern[i] == r:
                fence[r][i] = text[idx]
                idx += 1
    
    # Read the fence row by row to get the decrypted text
    decrypted_text = ''.join([''.join(row) for row in fence])
    return decrypted_text

# Example usage
if __name__ == "__main__":
    plaintext = input("Enter the text to encrypt: ")
    rails = int(input("Enter the number of rails: "))
    
    encrypted_text = rail_fence_encrypt(plaintext, rails)
    print(f"Encrypted Text: {encrypted_text}")
    
    decrypted_text = rail_fence_decrypt(encrypted_text, rails)
    print(f"Decrypted Text: {decrypted_text}")
