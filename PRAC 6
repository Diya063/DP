import itertools
import string
import time

def brute_force_password(target_password, max_length):
    chars = string.ascii_lowercase + string.digits  # Characters to use for brute force
    attempt_count = 0
    start_time = time.time()

    print("Starting brute-force attack...\n")
    
    for length in range(1, max_length + 1):
        for guess in itertools.product(chars, repeat=length):
            attempt_count += 1
            guess_password = ''.join(guess)
            
            # Uncomment this line if you want to see every attempt
            # print(f"Trying: {guess_password}")
            
            if guess_password == target_password:
                end_time = time.time()
                print(f"\nPassword found: {guess_password}")
                print(f"Attempts: {attempt_count}")
                print(f"Time taken: {end_time - start_time:.2f} seconds")
                return

            # Display progress every 1000 attempts
            if attempt_count % 1000 == 0:
                print(f"Attempts: {attempt_count}, Last guess: {guess_password}")

    print("\nPassword not found within the given constraints.")
    end_time = time.time()
    print(f"Total attempts: {attempt_count}")
    print(f"Time taken: {end_time - start_time:.2f} seconds")

# Example usage
if __name__ == "__main__":
    target_password = input("Enter the password to crack (e.g., 'abc'): ")
    max_length = int(input("Enter the maximum length of the password: "))
    brute_force_password(target_password, max_length)
